#机器学习线性判别分析3.5题
import numpy as np
import matplotlib.pyplot as plt
data = [[0.697, 0.460, 1],
        [0.774, 0.376, 1],
        [0.634, 0.264, 1],
        [0.608, 0.318, 1],
        [0.556, 0.215, 1],
        [0.403, 0.237, 1],
        [0.481, 0.149, 1],
        [0.437, 0.211, 1],
        [0.666, 0.091, 0],
        [0.243, 0.267, 0],
        [0.245, 0.057, 0],
        [0.343, 0.099, 0],
        [0.639, 0.161, 0],
        [0.657, 0.198, 0],
        [0.360, 0.370, 0],
        [0.593, 0.042, 0],
        [0.719, 0.103, 0]]   #书中的西瓜数据集
#数据集按瓜好坏分类
data = np.array([i[:-1] for i in data])
X0 = np.array(data[:8])
X1 = np.array(data[8:])
#求正反例均值
miu0 = np.mean(X0, axis=0).reshape((-1, 1))
miu1 = np.mean(X1, axis=0).reshape((-1, 1))
#求协方差
cov0 = np.cov(X0, rowvar=False)
cov1 = np.cov(X1, rowvar=False)
#求出w
S_w = np.mat(cov0 + cov1)
Omiga = S_w.I * (miu0 - miu1)
#画出点、直线
plt.scatter(X0[:, 0], X0[:, 1], c='b', label='+', marker = '+')
plt.scatter(X1[:, 0], X1[:, 1], c='r', label='-', marker = '_')
plt.plot([0, 1], [0, -Omiga[0] / Omiga[1]], label='y')
plt.xlabel('密度', fontproperties='SimHei', fontsize=15, color='green');
plt.ylabel('SUGAR CONTENT', fontproperties='SimHei', fontsize=15, color='green');
plt.title(r'3.5 线性判别分析', fontproperties='SimHei', fontsize=25);
plt.legend()
plt.show()
 

2.由Rstudio做出如下的LDA回归结果：

Coefficients:
             Estimate     Std. Error  t value P r(>|t|)    
(Intercept)    -0.238000  0.069861  -3.407   0.000715 ***
tobacco      0.016756   0.004904   3.417   0.000691 ***
age          0.008169   0.001602   5.099   5.02e-07 ***
ldl           0.036629   0.010222   3.583   0.000375 ***
 
其中得到的信息：
Prior probabilities of groups:
        0         1 
0.6536797  0.3463203 
各类的均值位置为：
Group means:
   tobacco      age        ldl
0  2.634735    38.85430   4.344238
1  5.524875    50.29375   5.487938
线性判别系数
Coefficients of linear discriminants:
               LD1
Tobacco    0.09073422
age        0.04423507
ldl         0.19834203

由此可知，这与w=(0.61,-0.45,0.65)T的拟合程度相比，当||w||=1时所做判别面效果没有那么好，稍弱一些。
附部分R代码：
states<-as.data.frame(heart[,c("tobacco","age","ldl")])  
fit<-lda(chd~tobacco+age+ldl,data=heart)  
summary(fit)  
plot(fit)
library(MASS)
params <- lda(chd~tobacco+age+ldl, data=heart)
lda(chd~tobacco+age+ldl, data=heart)
ret <- predict(params, heart)






